<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezen.mannamatna.mapper.UserInfoMapper">
	<select id="selectUserInfo"
		resultType="com.ezen.mannamatna.vo.UserInfoVO">
		select * from user_info where ui_Nickname = #{uiNickname}
	</select>
	
	<select id="selectUserInfoById"
		resultType="com.ezen.mannamatna.vo.UserInfoVO">
		select * from user_info where ui_Id = #{uiId}
	</select>
	
	<select id="selectUserInfoForLogin"
		resultType="com.ezen.mannamatna.vo.UserInfoVO">
		select * from user_info where ui_Id = #{uiId} and ui_Pwd =
		#{uiPwd}
	</select>
	
	<select id="selectKakaoUserInfo"
		resultType="com.ezen.mannamatna.vo.KakaoUserInfoVO">
		select * from kakao_user_info where kui_Id = #{kuiId}
	</select>
	
	<select id="selectKakaoUserInfoByNum"
		resultType="com.ezen.mannamatna.vo.KakaoUserInfoVO">
		select * from kakao_user_info where ui_Num = #{uiNum}
	</select>
	
	<select id="selectNaverUserInfo"
		resultType="com.ezen.mannamatna.vo.NaverUserInfoVO">
		select * from naver_user_info where nui_Id = #{nuiId}
	</select>
	
	<select id="selectNaverUserInfoByNum"
		resultType="com.ezen.mannamatna.vo.NaverUserInfoVO">
		select * from naver_user_info where ui_Num = #{uiNum}
	</select>
	
	<select id="selectUserInfoByNum"
		resultType="com.ezen.mannamatna.vo.UserInfoVO">
		select * from user_info where ui_Num = #{uiNum}
	</select>
	
	
	<select id="idChk" resultType="int">
		select count(*) from user_info
		where ui_Id = #{uiId}
	</select>

	<select id="nicknameChk" resultType="int">
		select count(*) from
		user_info where ui_Nickname = #{uiNickname}
	</select>

	<insert id="insertUserInfo">
		insert into user_info
		(ui_nickname,ui_pwd,ui_filepath,ui_gender,ui_age,ui_id,ui_phone)
		values
		(#{uiNickname},#{uiPwd},#{uiFilepath},#{uiGender},#{uiAge},#{uiId},#{uiPhone})
	</insert>

	<insert id="insertKakaoUserInfo">
		insert into kakao_user_info (ui_num, kui_id)
		values
		(#{uiNum},#{kuiId})
	</insert>
	
	<insert id="insertNaverUserInfo">
		insert into naver_user_info (ui_num, nui_id)
		values
		(#{uiNum},#{nuiId})
	</insert>

	<update id="updateUserInfo">
		update user_info set ui_nickname = #{uiNickname},
		ui_pwd = #{uiPwd}, ui_filepath = #{uiFilepath}, ui_gender = #{uiGender} , ui_age = #{uiAge}, ui_phone = #{uiPhone}
		where ui_num = #{uiNum}
	</update>
	
	<update id="updateUserInfoActive">
		update user_info set ui_active = #{uiActive}
		where ui_id = #{uiId}
	</update>

	<update id="deleteUserInfo"> <!-- 회원 탈퇴 목적이지만 db에는 업데이트로 기록됨 -->
		update user_info set ui_active = #{uiActive}, ui_del = #{uiDel}
		where
		ui_num = #{uiNum}
	</update>

	<!-- userInfo.biNum 업데이트문 -->
	<update id="updateUiBiNum"> <!-- 밥상 인서트 후 돌려받은 키를 유저인포의 biNum에 업데이트 -->
		update user_info set bi_num = #{biNum} where ui_num =
		#{uiNum}
	</update>
	
	<select id="selectUserInfos"><!-- 유저 전체 리스트 검색(관리자페이지 차트용) -->
		select * from user_info;
	</select>
	
	<select id="selectUserInfosByBiNum"
		resultType="com.ezen.mannamatna.vo.UserInfoVO"><!-- 유저정보의 biNum으로 해당밥상에 참여중이 유저리스트 검색 -->
		SELECT * FROM USER_INFO WHERE BI_NUM = #{biNum}
	</select>
	
	<select id="selectUserInfoFromBabsang"
		resultType="com.ezen.mannamatna.vo.UserInfoVO"><!-- 밥상의 uiNum으로 유저인포 검색 -->
		SELECT UI_NUM, UI_NICKNAME, UI_PWD, UI_FILEPATH,
		UI_GENDER,
		UI_AGE, BI_NUM, UI_CREDAT,
		UI_ID, UI_ACTIVE, UI_DEL
		FROM USER_INFO WHERE
		UI_NUM = #{uiNum};
	</select>
	<select id="selectUserInfosByCredat" resultType="com.ezen.mannamatna.vo.UserInfoVO">
	<!-- 가입날짜(년-월-일)별로 유저수 조회 쿼리문 추가(구글차트용) -->
	SELECT DATE_FORMAT(UI_CREDAT, '%Y-%m-%d') UI_CREDAT, COUNT(*) UI_USERCNT FROM USER_INFO GROUP BY DATE_FORMAT(UI_CREDAT, '%Y-%m-%d')
	 ORDER BY UI_CREDAT ASC;
	</select>
	<select id ="selectUserInfosByUiActive1" resultType="com.ezen.mannamatna.vo.UserInfoVO">
		SELECT UI_NUM, UI_NICKNAME, UI_PWD, UI_FILEPATH,
		UI_GENDER,
		UI_AGE, BI_NUM, UI_CREDAT,
		UI_ID, UI_ACTIVE, UI_DEL, UI_PHONE
		FROM USER_INFO WHERE UI_ACTIVE = 1 
		<if test='uiNickname != null and uiNickname != ""'>
		<!-- 유저 닉네임으로 검색기능 추가(닉네임 유니크속성) -->
		AND UI_NICKNAME LIKE CONCAT('%', #{uiNickname}, '%')
		</if>
		ORDER BY UI_CREDAT DESC
	</select>
		<select id ="selectUserInfosByUiActive2" resultType="com.ezen.mannamatna.vo.UserInfoVO">
		SELECT UI_NUM, UI_NICKNAME, UI_PWD, UI_FILEPATH,
		UI_GENDER,
		UI_AGE, BI_NUM, UI_CREDAT,
		UI_ID, UI_ACTIVE, UI_DEL, UI_PHONE
		FROM USER_INFO WHERE UI_ACTIVE = 2 
		<if test='uiNickname != null and uiNickname != ""'>
		<!-- 유저 닉네임으로 검색기능 추가(닉네임 유니크속성) -->
		AND UI_NICKNAME LIKE CONCAT('%', #{uiNickname}, '%')
		</if>
		ORDER BY UI_CREDAT DESC
	</select>
</mapper>